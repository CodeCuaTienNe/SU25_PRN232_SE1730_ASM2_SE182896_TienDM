@page "/appointments"
@page "/appointments/list"
@using DNATestingSystem.BlazorWAS.GraphQLClients.TienDM.Models
@using DNATestingSystem.BlazorWAS.GraphQLClients.TienDM.GraphQLClient
@inject GraphQLConsumer _graphQLConsumer

<h3>Appointments List</h3>

@if (appointmentsTienDms == null)
{
    <div>Page loading...</div>    
}
else
{
    <table class="table table-striped table-bordered table-hover">
        <thead class="bg-primary text-white">
            <tr>
                <th>ID</th>
                <th>Date</th>
                <th>Time</th>
                <th>Contact Phone</th>
                <th>Address</th>
                <th>Total Amount</th>
                <th>Payment Status</th>
                <th>Sampling Method</th>
                <th>Notes</th>
                <th></th>
            </tr>
        </thead>
        <tbody class="table-primary">
            @foreach (var appointment in appointmentsTienDms)
            {
                <tr>
                    <td class="text-center fw-bold">@appointment.AppointmentsTienDmid</td>
                    <td>@appointment.AppointmentDate.ToString("dd/MM/yyyy")</td>
                    <td class="text-center">@appointment.AppointmentTime</td>
                    <td class="text-center fw-bold text-success">@appointment.ContactPhone</td>
                    <td>@appointment.Address</td>
                    <td class="text-end fw-bold text-danger">@appointment.TotalAmount.ToString("#,###")</td>
                    <td class="text-center">
                        @if (appointment.IsPaid == true)
                        {
                            <span class="badge bg-success">Paid</span>
                        }
                        else
                        {
                            <span class="badge bg-warning">Unpaid</span>
                        }
                    </td>
                    <td class="text-center fw-bold text-primary">@appointment.SamplingMethod</td>
                    <td>@appointment.Notes</td>
                    <td>
                        <div class="btn-group" role="group">
                            <a href="/appointments/detail/@appointment.AppointmentsTienDmid" class="btn btn-sm btn-primary">Detail</a>
                            <a href="/appointments/edit/@appointment.AppointmentsTienDmid" class="btn btn-sm btn-warning">Edit</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<AppointmentsTienDm>? appointmentsTienDms;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);

        try
        {
            appointmentsTienDms = await _graphQLConsumer.GetAllAppointments();
        }
        catch (Exception)
        {
        }
    }
}
